generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @db.Text
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @db.Text
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?   @db.Text
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @db.Text
  // slug          String?   @unique @db.VarChar(255) // the slug is used to create the user's profile url

  createdAt DateTime @default(now())

  accounts Account[]
  sessions Session[]
  products Product[]
  shop     Shop[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String   @id @default(cuid())
  slug        String   @unique
  name        String   @db.Text
  description String   @db.Text
  price       Float
  image       String?  @db.Text
  file        String?  @db.Text
  priceId     String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Shop        Shop     @relation(fields: [shopSlug], references: [slug])
  shopSlug    String   @db.VarChar(255)

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

// one to one relationship between user and shop

model Shop {
  slug String @id @unique @db.VarChar(255) // the slug is used to create the shop's url

  name    String  @db.Text
  image   String? @db.Text // profile image
  heroImg String? @db.Text // hero image
  bio     String? @db.Text
  website String? @db.Text

  Products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
